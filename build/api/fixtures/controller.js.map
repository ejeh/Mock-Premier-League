{"version":3,"sources":["../../../src/api/fixtures/controller.js"],"names":["search","req","res","query","q","index","body","esClient","multi_match","fields","fuzziness","_source","then","results","result","hits","map","source","err","message","create","session","key","data","locals","userId","userType","event_date","venue","homeTeam","team_name","awayTeam","newObject","firstHalfStart","refree","goalsHomeTeam","goalsAwayTeam","round","statusShort","record","Fixtures","save","findAll","find","limit","sort","createdAt","select","status","completed","filter","kind","pending","findOne","recordId","params","fixtureId","ObjectId","isValid","findById","update","updatedBy","updated","Date","now","score","extratime","penalty","halftime","fulltime","findByIdAndUpdate","played","adminId","includes","view","name","destroy","findByIdAndRemove"],"mappings":"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","sourcesContent":["import Fixtures, { ObjectId } from \"../../api/fixtures/model\";\nimport { success, fail, notFound } from \"../../services/responses\";\nimport esClient from \"../../services/elasticsearch\";\n\n// Find searched Fixtures\nexport async function search(req, res) {\n  const { q } = req.query || {};\n\n  if (!q) return fail(res, 422, `Why incorrect query string ${q}?`);\n  // let results;\n  const search = function search(index, body) {\n    return esClient.search({ index: index, body: body });\n  };\n  let body = {\n    query: {\n      multi_match: {\n        query: q,\n        fields: [\"status\", \"venue\", \"awayTeam.team_name\", \"homeTeam.name\"],\n        fuzziness: \"AUTO\"\n      }\n    },\n    _source: [\n      \"event_date\",\n      \"firstHalfStart\",\n      \"statusShort\",\n      \"venue\",\n      \"homeTeam\",\n      \"awayTeam\",\n      \"goalsHomeTeam\",\n      \"goalsAwayTeam\",\n      \"score\",\n      \"status\",\n      \"round\",\n      \"referee\"\n    ]\n  };\n  search(\"fixtures\", body)\n    .then(async results => {\n      if (!results) {\n        return fail(res, 500, \"No search result found\");\n      }\n      const result = results.hits.hits.map(source => {\n        return source._source;\n      });\n      success(res, 200, result, \"retrieving record(s) was successfully!\");\n    })\n    .catch(err =>\n      fail(res, 500, `Error retrieving record(s).\\r\\n${err.message}`)\n    );\n}\n\n// Create  a fixture\nexport function create(req, res) {\n  if (req.session.key) {\n    const data = req.body || {};\n    const { userId, userType } = res.locals;\n    if (userType !== \"admin\") {\n      return fail(\n        res,\n        422,\n        `Only admin are allowed to add products not ${userType}`\n      );\n    }\n    // Validate request\n    if (!data.event_date) {\n      return fail(\n        res,\n        422,\n        \"Fixtures date can not be empty and must be alphanumeric.\"\n      );\n    }\n\n    if (!data.venue) {\n      return fail(\n        res,\n        422,\n        \"Feature venue can not be empty and must be alphanumeric.\"\n      );\n    }\n    if (!data.homeTeam.team_name) {\n      return fail(\n        res,\n        422,\n        \"Fixtures home team can not be empty and must be alphanumeric.\"\n      );\n    }\n    if (!data.awayTeam.team_name) {\n      return fail(\n        res,\n        422,\n        \"Fixtures away_team name can not be empty and must be alphanumeric.\"\n      );\n    }\n\n    const newObject = {};\n    if (data.event_date) newObject.event_date = data.event_date;\n    if (data.venue) newObject.venue = data.venue;\n\n    newObject.homeTeam = {};\n    if (data.homeTeam.team_name)\n      newObject.homeTeam.team_name = data.homeTeam.team_name;\n    if (data.awayTeam.team_name) newObject.awayTeam = {};\n    newObject.awayTeam.team_name = data.awayTeam.team_name;\n    if (data.firstHalfStart) newObject.firstHalfStart = data.firstHalfStart;\n    if (data.refree) newObject.refree = data.refree;\n    if (data.goalsHomeTeam) newObject.goalsHomeTeam = data.goalsHomeTeam;\n    if (data.goalsAwayTeam) newObject.goalsAwayTeam = data.goalsAwayTeam;\n    if (data.round) newObject.round = data.round;\n    if (data.statusShort) newObject.statusShort = data.statusShort;\n\n    const record = new Fixtures(newObject);\n\n    return record\n      .save()\n      .then(result => {\n        if (!result) {\n          return fail(res, 404, \"Error: not found newly created team\");\n        }\n        return success(\n          res,\n          200,\n          result,\n          \"New fixture has been created successfully\"\n        );\n      })\n      .catch(err => {\n        return fail(\n          res,\n          500,\n          `An error occured while trying to create a team: ${err.message}`\n        );\n      });\n  } else {\n    return fail(res, 500, \"Session timeout, please re-login\");\n  }\n}\n\n// / Retrieve and return all records from the database.\nexport function findAll(req, res) {\n  if (req.session.key) {\n    return Fixtures.find()\n      .limit(50)\n      .sort({ createdAt: -1 })\n      .select({\n        // eslint-disable-next-line object-property-newline\n        venue: true,\n        homeTeam: true,\n        awayTeam: true,\n        refree: true,\n        event_date: true,\n        status: true,\n        firstHalfStart: true\n      })\n      .then(result =>\n        success(res, 200, result, \"retrieving record(s) was successfully!\")\n      )\n      .catch(err =>\n        fail(res, 500, `Error retrieving record(s).\\r\\n${err.message}`)\n      );\n  } else {\n    return fail(res, 500, \"Session timeout, please re-login\");\n  }\n}\n// Retrieve all completed fixtures\nexport function completed(req, res) {\n  if (req.session.key) {\n    const filter = {\n      status: \"Match Finished\"\n    };\n    const { userId, userType } = res.locals;\n    if (!userId || !userType)\n      return fail(res, 400, \"Invalid authentication credentials\");\n    if (userType !== \"user\")\n      return fail(\n        res,\n        422,\n        `Only Users are allowed to update this record not ${userType}`\n      );\n    return Fixtures.find(filter)\n      .then(result => {\n        if (!result) return notFound(res, \"Error record not found.\");\n        return success(res, 200, result, \"retrieving record was successfully!\");\n      })\n      .catch(err => {\n        if (err.kind === \"ObjectId\") {\n          notFound(res, `Error retrieving record.\\r\\n${err.message}`);\n        }\n        return fail(res, 500, `Error retrieving record.\\r\\n${err.message}`);\n      });\n  } else {\n    return fail(res, 500, \"Session timeout, please re-login\");\n  }\n}\n\n// Retrieve all pending fixtures\nexport function pending(req, res) {\n  if (req.session.key) {\n    const filter = {\n      status: \"pending\"\n    };\n    const { userId, userType } = res.locals;\n    if (!userId || !userType)\n      return fail(res, 400, \"Invalid authentication credentials\");\n    if (userType !== \"user\")\n      return fail(\n        res,\n        422,\n        `Only Users are allowed to update this record not ${userType}`\n      );\n    return Fixtures.find(filter)\n      .then(result => {\n        if (!result) return notFound(res, \"Error record not found.\");\n        return success(res, 200, result, \"retrieving record was successfully!\");\n      })\n      .catch(err => {\n        if (err.kind === \"ObjectId\") {\n          notFound(res, `Error retrieving record.\\r\\n${err.message}`);\n        }\n        return fail(res, 500, `Error retrieving record.\\r\\n${err.message}`);\n      });\n  } else {\n    return fail(res, 500, \"Session timeout, please re-login\");\n  }\n}\n\n// Retrieve a single record with a given teamId\nexport function findOne(req, res) {\n  if (req.session.key) {\n    let recordId = req.params.fixtureId || \"\";\n    const { userId, userType } = res.locals;\n    if (!userId || !userType)\n      return fail(res, 400, \"Invalid authentication credentials\");\n    if (userType !== \"admin\")\n      return fail(\n        res,\n        422,\n        `Only Admins are allowed to update this record not ${userType}`\n      );\n    if (!ObjectId.isValid(recordId))\n      return fail(res, 422, \"Invalid record Id as request parameter\");\n    return Fixtures.findById(recordId)\n      .then(result => {\n        if (!result) return notFound(res, \"Error record not found.\");\n        return success(res, 200, result, \"retrieving record was successfully!\");\n      })\n      .catch(err => {\n        if (err.kind === \"ObjectId\") {\n          notFound(res, `Error retrieving record.\\r\\n${err.message}`);\n        }\n        return fail(res, 500, `Error retrieving record.\\r\\n${err.message}`);\n      });\n  } else {\n    return fail(res, 500, \"Session timeout, please re-login\");\n  }\n}\n\n// Update a fixtures identified by the fixturesId in the request\nexport async function update(req, res) {\n  if (req.session.key) {\n    const fixtureId = req.params.fixtureId || \"\";\n    const data = req.body || {};\n    const { userId, userType } = res.locals;\n    if (!userId || !userType)\n      return fail(res, 400, \"Invalid authentication credentials\");\n    if (userType !== \"admin\")\n      return fail(\n        res,\n        422,\n        `Only Admins are allowed to update this record not ${userType}`\n      );\n\n    const newObject = {};\n    newObject.updatedBy = userId;\n    newObject.updated = Date.now();\n    if (data.event_date) newObject.event_date = data.event_date;\n    if (data.venue) newObject.venue = data.venue;\n\n    newObject.homeTeam = {};\n    if (data.homeTeam.team_name)\n      newObject.homeTeam.team_name = data.homeTeam.team_name;\n    if (data.awayTeam.team_name) newObject.awayTeam = {};\n    newObject.awayTeam.team_name = data.awayTeam.team_name;\n    if (data.firstHalfStart) newObject.firstHalfStart = data.firstHalfStart;\n    if (data.refree) newObject.refree = data.refree;\n    if (data.status) newObject.status = data.status;\n    if (data.goalsHomeTeam) newObject.goalsHomeTeam = data.goalsHomeTeam;\n    if (data.goalsAwayTeam) newObject.goalsAwayTeam = data.goalsAwayTeam;\n    if (data.round) newObject.round = data.round;\n    if (data.statusShort) newObject.statusShort = data.statusShort;\n\n    newObject.score = {};\n    if (data.score.extratime) newObject.score.extratime = data.score.extratime;\n    if (data.score.penalty) newObject.score.penalty = data.score.penalty;\n    if (data.score.halftime) newObject.score.halftime = data.score.halftime;\n    if (data.score.fulltime) newObject.score.fulltime = data.score.fulltime;\n\n    return Fixtures.findByIdAndUpdate(fixtureId, newObject, { new: true })\n      .then(result => {\n        if (!result)\n          return notFound(\n            res,\n            `Error: newly submitted record not found with id ${userId}`\n          );\n        return success(\n          res,\n          200,\n          result,\n          \"Record has been created successfully!\"\n        );\n      })\n      .catch(err =>\n        fail(\n          res,\n          500,\n          `Error updating record with id ${userId}.\\r\\n${err.message}`\n        )\n      );\n  } else {\n    return fail(res, 500, \"Session timeout, please re-login\");\n  }\n}\n\n// fixtures played update\nexport async function played(req, res) {\n  if (req.session.key) {\n    const recordId = req.params.fixtureId || \"\";\n    const data = req.body || {};\n    const { userId, userType } = res.locals;\n    let adminId;\n    if (userType === \"admin\" || !ObjectId.isValid(adminId)) {\n      adminId = userId;\n    } else {\n      return fail(\n        res,\n        422,\n        `Only admins are allowed to approval products not ${userType}`\n      );\n    }\n    if (!ObjectId.isValid(recordId)) {\n      return fail(res, 422, \"Invalid record Id as request parameter\");\n    }\n    if (![\"pending\", \"match Finish\"].includes(data.status)) {\n      return fail(\n        res,\n        422,\n        `Fixtures status must be either pending or completed\"${data.status}\".`\n      );\n    }\n\n    const newObject = {};\n    newObject.updated = Date.now();\n    newObject.updatedBy = userId;\n    if (data.status) {\n      newObject.status = data.status;\n    }\n\n    // Find fixture and update it with the request body\n    return Fixtures.findByIdAndUpdate(recordId, newObject, { new: true })\n      .then(result => {\n        if (!result) {\n          return notFound(res, `Fixture not found with id ${recordId} first`);\n        }\n        return success(\n          res,\n          200,\n          result.view(true),\n          \"Fixture has been acted on successfully!\"\n        );\n      })\n      .catch(err => {\n        if (err.kind === \"ObjectId\" || err.name === \"NotFound\") {\n          return notFound(\n            res,\n            `Fixture not found with id ${recordId}\\r\\n${err.message}`\n          );\n        }\n        return fail(\n          res,\n          500,\n          `Error updating fixture with id ${recordId}\\r\\n${err.message}`\n        );\n      });\n  } else {\n    return fail(res, 500, \"Session timeout, please re-login\");\n  }\n}\n\n// Delete a fixture with the specified teamId in the request\nexport async function destroy(req, res) {\n  if (req.session.key) {\n    const recordId = req.params.fixtureId || \"\";\n    if (!recordId) return fail(res, 400, \"No record Id as request parameter\");\n    if (!recordId)\n      return fail(res, 422, \"Invalid record Id as request parameter\");\n    return Fixtures.findByIdAndRemove(recordId)\n      .then(record => {\n        if (!record)\n          return notFound(res, `Record not found with id ${recordId}`);\n        return success(res, 200, [], \"Record deleted successfully!\");\n      })\n      .catch(err => {\n        if (err.kind === \"ObjectId\" || err.name === \"NotFound\") {\n          return notFound(\n            res,\n            `Error: record not found with id ${recordId}\\r\\n${err.message}`\n          );\n        }\n        return fail(\n          res,\n          500,\n          `Error: could not delete record with id ${recordId}\\r\\n${err.message}`\n        );\n      });\n  } else {\n    return fail(res, 500, \"Session timeout, please re-login\");\n  }\n}\n"],"file":"controller.js"}