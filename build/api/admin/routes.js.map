{"version":3,"sources":["../../../src/api/admin/routes.js"],"names":["router","express","Router","get","isValidAdmin","admin","findOne","findAll","put","update","destroy"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAEA;;;;;;;;;;AAQAF,MAAM,CAACG,GAAP,CAAW,kBAAX,EAA+BC,yBAA/B,EAA6CC,KAAK,CAACC,OAAnD;AAEA;;;;;;;;AAOAN,MAAM,CAACG,GAAP,CAAW,SAAX,EAAsBC,yBAAtB,EAAoCC,KAAK,CAACE,OAA1C;AAEA;;;;;;;;;;;;;;;;;;AAkBAP,MAAM,CAACQ,GAAP,CAAW,SAAX,EAAsBJ,yBAAtB,EAAoCC,KAAK,CAACI,MAA1C;AAEA;;;;;;;;;;;AAUAT,MAAM,UAAN,CAAc,kBAAd,EAAkCI,yBAAlC,EAAgDC,KAAK,CAACK,OAAtD;eAEeV,M","sourcesContent":["import express from \"express\";\nimport * as admin from \"./controller\";\nimport { isValidAdmin } from \"../auth/controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /admins/:adminId Retrieve admin\n * @apiName RetrieveAdmin\n * @apiGroup Admin\n * @apiSuccess {Object} admin Admin's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Admin not found.\n */\nrouter.get(\"/admins/:adminId\", isValidAdmin, admin.findOne);\n\n/**\n * @api {get} /admins Retrieve admins\n * @apiName RetrieveAdmins\n * @apiGroup Admin\n * @apiSuccess {Object[]} rows List of Admins.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/admins\", isValidAdmin, admin.findAll);\n\n/**\n * @api {put} /admins Update admin\n * @apiName UpdateAdmin\n * @apiGroup Admin\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiParam {String} firstName admin's first name\n * @apiParam {String} lastName admin's last name\n * @apiParam {String} email  admin's email address\n * @apiParam {String} password  admin's password\n * @apiParam {Date} updated update date\n * @apiParam {String} updatedBy  AdminID staff who updated the record\n * @apiSuccess {Object} admin Admin's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Admin not found.\n * @apiError 401 master access only.\n */\n\nrouter.put(\"/admins\", isValidAdmin, admin.update);\n\n/**\n * @api {delete} /admins/:adminId Delete admin\n * @apiName DeleteAdmin\n * @apiGroup Admin\n * @apiPermission master\n * @apiParam  access_token master access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Admin not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/admins/:adminId\", isValidAdmin, admin.destroy);\n\nexport default router;\n"],"file":"routes.js"}