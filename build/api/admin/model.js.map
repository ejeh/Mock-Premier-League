{"version":3,"sources":["../../../src/api/admin/model.js"],"names":["AdminSchema","Schema","email","type","String","lowercase","max","trim","required","password","updated","firstName","lastName","Date","now","timestamps","toJSON","virtuals","transform","obj","ret","_id","methods","view","full","createdAt","updatedAt","updatedBy","Admin","mongoose","model","ObjectId","Types"],"mappings":";;;;;;;;;;;;;AAWA;;;;;;;;AAEA,IAAMA,WAAW,GAAG,IAAIC,gBAAJ;AAEhBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,SAAS,EAAE,IAFN;AAGLC,IAAAA,GAAG,EAAE,GAHA;AAILC,IAAAA,IAAI,EAAE,IAJD;AAKLC,IAAAA,QAAQ,EAAE;AALL,GAFS;AAShBC,EAAAA,QAAQ,EAAE;AAAEN,IAAAA,IAAI,EAAEC,MAAR;AAAgBI,IAAAA,QAAQ,EAAE;AAA1B,GATM;AAUhBE,EAAAA,OAAO,EAAE;AAAEP,IAAAA,IAAI,EAAEC,MAAR;AAAgBI,IAAAA,QAAQ,EAAE;AAA1B,GAVO;AAWhBG,EAAAA,SAAS,EAAE;AAAER,IAAAA,IAAI,EAAEC;AAAR,GAXK;AAYhBQ,EAAAA,QAAQ,EAAE;AAAET,IAAAA,IAAI,EAAEC;AAAR;AAZM,qDAaP;AAAED,EAAAA,IAAI,EAAEU,IAAR;AAAc,aAASA,IAAI,CAACC;AAA5B,CAbO,uDAcL;AAAEX,EAAAA,IAAI,EAAEC;AAAR,CAdK,UAgBlB;AACEW,EAAAA,UAAU,EAAE,IADd;AAEEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,IADJ;AAENC,IAAAA,SAAS,EAAE,mBAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,aAAOA,GAAG,CAACC,GAAX;AACD;AAJK;AAFV,CAhBkB,CAApB;AA2BArB,WAAW,CAACsB,OAAZ,GAAsB;AACpBC,EAAAA,IADoB,gBACfC,IADe,EACT;AACT,QAAMD,IAAI,GAAG;AACX;AACAZ,MAAAA,SAAS,EAAE,KAAKA,SAFL;AAGXC,MAAAA,QAAQ,EAAE,KAAKA,QAHJ;AAIXV,MAAAA,KAAK,EAAE,KAAKA;AAJD,KAAb;AAOA,WAAOsB,IAAI,qBAEFD,IAFE;AAGLE,MAAAA,SAAS,EAAE,KAAKA,SAHX;AAILC,MAAAA,SAAS,EAAE,KAAKA,SAJX;AAKLC,MAAAA,SAAS,EAAE,KAAKA;AALX,SAOPJ,IAPJ;AAQD;AAjBmB,CAAtB;;AAmBA,IAAMK,KAAK,GAAGC,qBAASC,KAAT,CAAe,OAAf,EAAwB9B,WAAxB,CAAd;;IAEe+B,Q,GAAaF,qBAASG,K,CAAtBD,Q;;eACAH,K","sourcesContent":["/**\n * @author Godfrey Ejeh\n * @description Creating the admin account\n * @property {String} email admin's email account\n * @property {String} password admin's password\n * @property {String} firstName admin's firstName\n * @property {String} lastName admin's lastName\n * @property {String} updated admin's updated\n * @property {String} updatedBy admin's updatedBy\n *  */\n\nimport mongoose, { Schema } from \"mongoose\";\n\nconst AdminSchema = new Schema(\n  {\n    email: {\n      type: String,\n      lowercase: true,\n      max: 100,\n      trim: true,\n      required: true\n    },\n    password: { type: String, required: true },\n    updated: { type: String, required: true },\n    firstName: { type: String },\n    lastName: { type: String },\n    updated: { type: Date, default: Date.now },\n    updatedBy: { type: String }\n  },\n  {\n    timestamps: true,\n    toJSON: {\n      virtuals: true,\n      transform: (obj, ret) => {\n        delete ret._id;\n      }\n    }\n  }\n);\n\nAdminSchema.methods = {\n  view(full) {\n    const view = {\n      // simple view\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email\n    };\n\n    return full\n      ? {\n          ...view,\n          createdAt: this.createdAt,\n          updatedAt: this.updatedAt,\n          updatedBy: this.updatedBy\n        }\n      : view;\n  }\n};\nconst Admin = mongoose.model(\"Admin\", AdminSchema);\n\nexport const { ObjectId } = mongoose.Types;\nexport default Admin;\n"],"file":"model.js"}